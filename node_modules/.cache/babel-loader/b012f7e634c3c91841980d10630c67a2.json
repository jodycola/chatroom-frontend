{"ast":null,"code":"var _jsxFileName = \"/Users/kody/code/react-chat/client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Input from './Input';\nimport Message from './Message';\nimport useMessage from '../hooks/useMessage';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst url = 'http://localhost:3000';\nexport default function Chat({\n  currentUser\n}) {\n  _s();\n\n  const [room, setRoom] = useState(null);\n  const ENDPOINT = 'http://localhost:4000/';\n  const [message, setMessage] = useState(\"\");\n  const {\n    messages,\n    sendMessage\n  } = useMessage(currentUser, room);\n\n  const handleSendMessage = e => {\n    e.preventDefault(); // useMessage hook\n\n    sendMessage(message, currentUser);\n    setMessage(''); // Rails api\n    // fetch(`http://localhost:3000/room`, {\n    //   method: 'POST',\n    //   headers: {\n    //     'Accept': 'application/json',\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(room)\n    // })\n    // .then(res => res.json())\n    // .then(console.log)\n  };\n\n  useEffect(() => {\n    const roomQuery = new URLSearchParams(window.location.search).get('room');\n    fetch(`${url}/room/${roomQuery}`).then(res => res.json()).then(console.log);\n    socket = io(ENDPOINT); // socket.emit('join', { room, currentUser }, ( ) => {\n    // });\n\n    return () => {};\n  }, [ENDPOINT, currentUser, room]);\n  return /*#__PURE__*/_jsxDEV(ChatStyled, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"room-title\",\n        children: [room, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), messages.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Message, {\n          currentUser: currentUser,\n          message: message,\n          messages: messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 72\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        handleSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n} // CSS\n\n_s(Chat, \"pMZ8IH/PwM4/ujEYMppMaMn61jU=\", false, function () {\n  return [useMessage];\n});\n\n_c = Chat;\nconst ChatStyled = styled.div`\n.container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    width: 100%;\n    background-color: #1A1A1D;\n}\n\nh1 {\n    position: absolute;\n    text-transform: capitalize;\n    top: 0;\n    left: 50px;\n    font-size: 50px;\n    color: #FFF;\n    border-bottom: 2px #FFF solid;\n}\n\n.messages {\n  padding: 5% 0;\n  overflow: auto;\n  flex: auto;\n}\n\n@media (min-width: 320px) and (max-width: 480px) {\n  .container {\n    height: 100%;\n    width: 100%;\n  }\n}\n\n@media (min-width: 480px) and (max-width: 1200px) {\n  .container {\n    width: 100%;\n  }\n}\n`;\n_c2 = ChatStyled;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"ChatStyled\");","map":{"version":3,"sources":["/Users/kody/code/react-chat/client/src/components/Chat.js"],"names":["React","useState","useEffect","io","Input","Message","useMessage","styled","socket","url","Chat","currentUser","room","setRoom","ENDPOINT","message","setMessage","messages","sendMessage","handleSendMessage","e","preventDefault","roomQuery","URLSearchParams","window","location","search","get","fetch","then","res","json","console","log","length","ChatStyled","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Input from './Input';\nimport Message from './Message';\nimport useMessage from '../hooks/useMessage';\nimport styled from 'styled-components';\n\nlet socket;\nconst url = 'http://localhost:3000'\n\nexport default function Chat({ currentUser }) {\n    const [room, setRoom] = useState(null);\n\n    const ENDPOINT = 'http://localhost:4000/'\n\n    const [message, setMessage] = useState(\"\");\n    const { messages, sendMessage } = useMessage(currentUser, room);\n    \n\n    const handleSendMessage = (e) => {\n        e.preventDefault();\n\n        // useMessage hook\n        sendMessage(message, currentUser);\n        setMessage('');\n\n        // Rails api\n        // fetch(`http://localhost:3000/room`, {\n        //   method: 'POST',\n        //   headers: {\n        //     'Accept': 'application/json',\n        //     'Content-Type': 'application/json'\n        //   },\n        //   body: JSON.stringify(room)\n        // })\n        // .then(res => res.json())\n        // .then(console.log)\n    };\n\n    useEffect(() => {\n        const roomQuery = (new URLSearchParams(window.location.search)).get('room');\n        \n      fetch(`${url}/room/${roomQuery}`)\n        .then(res => res.json())\n        .then(console.log)\n\n\n        socket = io(ENDPOINT);\n\n        // socket.emit('join', { room, currentUser }, ( ) => {\n\n        // });\n\n        return () => {\n        }\n    }, [ENDPOINT, currentUser, room])\n\n    return (\n        <ChatStyled>\n        <div className=\"container\">\n            <h1 className=\"room-title\">{room} </h1>\n            {messages.length === 0 ? null : <div className=\"messages\"> <Message currentUser={currentUser} message={message} messages={messages}/> </div>}\n            <Input message={message} setMessage={setMessage} handleSendMessage={handleSendMessage} />\n        </div>\n        </ChatStyled>\n    )\n}\n\n// CSS\nconst ChatStyled = styled.div`\n.container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    width: 100%;\n    background-color: #1A1A1D;\n}\n\nh1 {\n    position: absolute;\n    text-transform: capitalize;\n    top: 0;\n    left: 50px;\n    font-size: 50px;\n    color: #FFF;\n    border-bottom: 2px #FFF solid;\n}\n\n.messages {\n  padding: 5% 0;\n  overflow: auto;\n  flex: auto;\n}\n\n@media (min-width: 320px) and (max-width: 480px) {\n  .container {\n    height: 100%;\n    width: 100%;\n  }\n}\n\n@media (min-width: 480px) and (max-width: 1200px) {\n  .container {\n    width: 100%;\n  }\n}\n`"]},"metadata":{},"sourceType":"module"}