{"ast":null,"code":"var _jsxFileName = \"/Users/kody/code/react-chat/client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Input from './Input';\nimport Message from './Message';\nimport useMessage from '../hooks/useMessage';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nexport default function Chat({\n  currentUser\n}) {\n  _s();\n\n  const [room, setRoom] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const ENDPOINT = 'http://localhost:4000/';\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const {\n    messages,\n    sendMessage\n  } = useMessage(room); // setName(Object.values(currentUser)[2]);\n\n  console.log(name);\n\n  const handleSendMessage = e => {\n    e.preventDefault();\n    socket.emit('message', {\n      message\n    });\n    setMessage(''); // useMessage hook\n    // sendMessage(message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatStyled, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"room-title\",\n        children: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), messages.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Message, {\n          currentUser: currentUser,\n          message: message,\n          messageList: messageList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 72\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        handleSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n} // CSS\n\n_s(Chat, \"eaB7omN+9f8VhXNZa9HMwqL86Hg=\", false, function () {\n  return [useMessage];\n});\n\n_c = Chat;\nconst ChatStyled = styled.div`\n.container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    width: 100%;\n    background-color: #1A1A1D;\n}\n\nh1 {\n    position: absolute;\n    text-transform: capitalize;\n    top: 0;\n    left: 50px;\n    font-size: 50px;\n    color: #FFF;\n    border-bottom: 2px #FFF solid;\n}\n\n.messages {\n  padding: 5% 0;\n  overflow: auto;\n  flex: auto;\n}\n\n@media (min-width: 320px) and (max-width: 480px) {\n  .container {\n    height: 100%;\n    width: 100%;\n  }\n}\n\n@media (min-width: 480px) and (max-width: 1200px) {\n  .container {\n    width: 100%;\n  }\n}\n`;\n_c2 = ChatStyled;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"ChatStyled\");","map":{"version":3,"sources":["/Users/kody/code/react-chat/client/src/components/Chat.js"],"names":["React","useState","useEffect","io","Input","Message","useMessage","styled","socket","Chat","currentUser","room","setRoom","name","setName","ENDPOINT","message","setMessage","messageList","setMessageList","messages","sendMessage","console","log","handleSendMessage","e","preventDefault","emit","length","ChatStyled","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,IAAIC,MAAJ;AAGA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA+B;AAAA;;AAC1C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMc,QAAQ,GAAG,wBAAjB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAEmB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4Bf,UAAU,CAACK,IAAD,CAA5C,CAR0C,CAU1C;;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;;AAEA,QAAMW,iBAAiB,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAlB,IAAAA,MAAM,CAACmB,IAAP,CAAY,SAAZ,EAAuB;AAACX,MAAAA;AAAD,KAAvB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV,CAH6B,CAK7B;AACA;AACH,GAPD;;AASA,sBACI,QAAC,UAAD;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBAA4BN;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKS,QAAQ,CAACQ,MAAT,KAAoB,CAApB,GAAwB,IAAxB,gBAA+B;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,qCAA2B,QAAC,OAAD;AAAS,UAAA,WAAW,EAAElB,WAAtB;AAAmC,UAAA,OAAO,EAAEM,OAA5C;AAAqD,UAAA,WAAW,EAAEE;AAAlE;AAAA;AAAA;AAAA;AAAA,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFpC,eAGI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEF,OAAhB;AAAyB,QAAA,UAAU,EAAEC,UAArC;AAAiD,QAAA,iBAAiB,EAAEO;AAApE;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,C,CAED;;GAjCwBf,I;UAQcH,U;;;KARdG,I;AAkCxB,MAAMoB,UAAU,GAAGtB,MAAM,CAACuB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtCA;MAAMD,U","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Input from './Input';\nimport Message from './Message';\nimport useMessage from '../hooks/useMessage';\nimport styled from 'styled-components';\n\nlet socket;\n\n\nexport default function Chat({ currentUser }) {\n    const [room, setRoom] = useState(\"\");\n    const [name, setName] = useState(\"\");\n\n    const ENDPOINT = 'http://localhost:4000/'\n\n    const [message, setMessage] = useState(\"\");\n    const [messageList, setMessageList] = useState([]);\n    const { messages, sendMessage } = useMessage(room);\n\n    // setName(Object.values(currentUser)[2]);\n    console.log(name);\n\n    const handleSendMessage = (e) => {\n        e.preventDefault();\n        socket.emit('message', {message})\n        setMessage('');\n\n        // useMessage hook\n        // sendMessage(message);\n    };\n\n    return (\n        <ChatStyled>\n        <div className=\"container\">\n            <h1 className=\"room-title\">{room}</h1>\n            {messages.length === 0 ? null : <div className=\"messages\"> <Message currentUser={currentUser} message={message} messageList={messageList}/> </div>}\n            <Input message={message} setMessage={setMessage} handleSendMessage={handleSendMessage} />\n        </div>\n        </ChatStyled>\n    )\n}\n\n// CSS\nconst ChatStyled = styled.div`\n.container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    width: 100%;\n    background-color: #1A1A1D;\n}\n\nh1 {\n    position: absolute;\n    text-transform: capitalize;\n    top: 0;\n    left: 50px;\n    font-size: 50px;\n    color: #FFF;\n    border-bottom: 2px #FFF solid;\n}\n\n.messages {\n  padding: 5% 0;\n  overflow: auto;\n  flex: auto;\n}\n\n@media (min-width: 320px) and (max-width: 480px) {\n  .container {\n    height: 100%;\n    width: 100%;\n  }\n}\n\n@media (min-width: 480px) and (max-width: 1200px) {\n  .container {\n    width: 100%;\n  }\n}\n`"]},"metadata":{},"sourceType":"module"}