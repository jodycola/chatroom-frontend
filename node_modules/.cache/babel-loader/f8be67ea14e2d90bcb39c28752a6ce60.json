{"ast":null,"code":"var _jsxFileName = \"/Users/kody/code/chat/client/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ActionCable from 'actioncable';\nimport io from 'socket.io-client';\nimport Input from './Input';\nimport Message from './Message';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  currentUser\n}) {\n  _s();\n\n  // States & variables\n  const [chats, setChats] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const socket = io('http://localhost:4000/');\n  const room = new URLSearchParams(window.location.search).get('room'); // Listens on socket\n  //   useEffect(() => {\n  //     createSocket();\n  //   }, [])\n  //   // Create Action Cable socket\n  //   const createSocket = () => {\n  //   let cable = ActionCable.createConsumer('http://localhost:3000/cable');\n  //   setChats(cable.subscriptions.create({\n  //     channel: 'channel'\n  //   }, {\n  //     connected: () => {},\n  //     received: (data) => { \n  //       console.log(data);\n  //     },\n  //     create: function(chatContent) {\n  //       this.perform('create', {\n  //         content: chatContent\n  //       });\n  //     }\n  //   })\n  //   )\n  // }\n  // Handlers\n\n  const sendMessage = e => {\n    e.preventDefault();\n    chats.create(message);\n    setMessage('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatStyled, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"room-title\",\n      children: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [messageList.length === 0 ? null : /*#__PURE__*/_jsxDEV(Message, {\n        currentUser: currentUser,\n        message: message,\n        messageList: messageList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n} // CSS\n// @media (min-width: 320px) and (max-width: 480px) {\n//   .container {\n//     height: 100%;\n//     width: 100%;\n//   }\n// }\n// @media (min-width: 480px) and (max-width: 1200px) {\n//   .container {\n//     width: 100%;\n//   }\n// }\n\n_s(Chat, \"UsFDTg1jskXWWzKG2vfK6LZ5MJY=\");\n\n_c = Chat;\nconst ChatStyled = styled.div`\n.room-title {\n  text-transform: capitalize;\n  font-size: 36px;\n  color: #FFF;\n  border-bottom: 2px #FFF solid;\n}\n\n.container {\n  position: relative;\n  margin: auto;\n  height: 500px;\n  width: 70%;\n  background-color: white;\n}\n\n`;\n_c2 = ChatStyled;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"ChatStyled\");","map":{"version":3,"sources":["/Users/kody/code/chat/client/src/components/Chat.js"],"names":["React","useState","useEffect","ActionCable","io","Input","Message","styled","Chat","currentUser","chats","setChats","name","setName","message","setMessage","messageList","setMessageList","socket","room","URLSearchParams","window","location","search","get","sendMessage","e","preventDefault","create","length","ChatStyled","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA+B;AAAA;;AAE1C;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMiB,MAAM,GAAGd,EAAE,CAAC,wBAAD,CAAjB;AACA,QAAMe,IAAI,GAAI,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAD,CAA8CC,GAA9C,CAAkD,MAAlD,CAAb,CAR0C,CAU1C;AACF;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;;AACA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAjB,IAAAA,KAAK,CAACkB,MAAN,CAAad,OAAb;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAJD;;AAMA,sBACI,QAAC,UAAD;AAAA,4BACA;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4BI;AAA5B;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACKH,WAAW,CAACa,MAAZ,KAAuB,CAAvB,GAA2B,IAA3B,gBAAmC,QAAC,OAAD;AAAS,QAAA,WAAW,EAAEpB,WAAtB;AAAmC,QAAA,OAAO,EAAEK,OAA5C;AAAqD,QAAA,WAAW,EAAEE;AAAlE;AAAA;AAAA;AAAA;AAAA,cADxC,eAEI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEF,OAAhB;AAAyB,QAAA,UAAU,EAAEC,UAArC;AAAiD,QAAA,WAAW,EAAEU;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;GAhEwBjB,I;;KAAAA,I;AAiExB,MAAMsB,UAAU,GAAGvB,MAAM,CAACwB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMD,U","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ActionCable from 'actioncable';\nimport io from 'socket.io-client';\nimport Input from './Input';\nimport Message from './Message';\nimport styled from 'styled-components';\n\nexport default function Chat({ currentUser }) {\n\n    // States & variables\n    const [chats, setChats] = useState(null);\n    const [name, setName] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [messageList, setMessageList] = useState([]);\n    const socket = io('http://localhost:4000/')\n    const room = (new URLSearchParams(window.location.search)).get('room');\n\n    // Listens on socket\n  //   useEffect(() => {\n  //     createSocket();\n  //   }, [])\n\n  //   // Create Action Cable socket\n  //   const createSocket = () => {\n  //   let cable = ActionCable.createConsumer('http://localhost:3000/cable');\n  //   setChats(cable.subscriptions.create({\n  //     channel: 'channel'\n  //   }, {\n  //     connected: () => {},\n  //     received: (data) => { \n  //       console.log(data);\n  //     },\n  //     create: function(chatContent) {\n  //       this.perform('create', {\n  //         content: chatContent\n  //       });\n  //     }\n  //   })\n  //   )\n  // }\n\n    // Handlers\n    const sendMessage = (e) => {\n      e.preventDefault();\n      chats.create(message);\n      setMessage('')\n    };\n  \n    return (\n        <ChatStyled>\n        <h1 className=\"room-title\">{room}</h1>\n        <div className=\"container\">\n            {messageList.length === 0 ? null :  <Message currentUser={currentUser} message={message} messageList={messageList}/> }\n            <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n        </div>\n        </ChatStyled>\n    )\n}\n\n// CSS\n// @media (min-width: 320px) and (max-width: 480px) {\n//   .container {\n//     height: 100%;\n//     width: 100%;\n//   }\n// }\n\n// @media (min-width: 480px) and (max-width: 1200px) {\n//   .container {\n//     width: 100%;\n//   }\n// }\nconst ChatStyled = styled.div`\n.room-title {\n  text-transform: capitalize;\n  font-size: 36px;\n  color: #FFF;\n  border-bottom: 2px #FFF solid;\n}\n\n.container {\n  position: relative;\n  margin: auto;\n  height: 500px;\n  width: 70%;\n  background-color: white;\n}\n\n`"]},"metadata":{},"sourceType":"module"}